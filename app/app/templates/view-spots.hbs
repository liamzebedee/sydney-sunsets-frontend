<div class='wrap'>
	<div id="map"></div>
	<div id='ui'>
		<div class='inner'>
			<h1>Sydney Sunsets</h1>
			<div class='info'>
				<span><img src='assets/sunset-bare.svg'/> Sunset at 4:50pm</span>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
var SYDNEY_LNGLAT = [151.2093, -33.8688];

$(document).ready(function() {
	var $map = 'map';

	var API = {};
	API.getSpots = function(lat, lng, bounds) {
		var sampleSpots = [{lng: 151.21468936436338, lat: -33.85667594669833},
			{lng: 151.21023865813532, lat: -33.855094719359485},
			{lng: 151.21774482209128, lat: -33.8519681430416},
			{lng: 151.20358974060105, lat: -33.84992948155219},
			{lng: 151.2232737923265, lat: -33.84579485048061},
			{lng: 151.1951994855155, lat: -33.86305317723418}];

		sampleSpots.forEach(spot => {
			spot.id = 1;
			spot.altitude = 100;
		})

		// Bounds is the bounding box of the map
		// Idk if this will be useful or not, but we could use it to track where people are looking.
		// {
		//  "_sw": {
		//   "lng": 151.14814563440473,
		//   "lat": -33.89559202919046
		//  },
		//  "_ne": {
		//   "lng": 151.27045436548815,
		//   "lat": -33.841999559490574
		//  }
		// }

		return sampleSpots;
	}

	function setupMapboxMaps() {
		mapboxgl.accessToken = 'pk.eyJ1IjoibGlhbXplYmVkZWUiLCJhIjoiY2oyaWFmdXpxMDFlMTJwcjd4cTdieDdyMiJ9.K8da3SqjRr8_XDRxbrT1zQ';
		var map = new mapboxgl.Map({
			container: $map,
			style: 'mapbox://styles/mapbox/streets-v9',
			center: SYDNEY_LNGLAT,
			zoom: 13
		});

		map.on('load', function () {
		    // map.addSource('clouds', {
		    //     type: 'raster',
		    //     tiles: ['http://tile.openweathermap.org/map/clouds_new/{z}/{x}/{y}.png?appid=01458f9ac1bb039bc50511ad57522f92'],
		    //     tileSize: 256
		    // });
		    
		    // map.addLayer({
		    //     'id': 'cloud-layer',
		    //     'type': 'raster',
		    //     // 'type': 'fill',
		    //     'source': 'clouds',
		    //     "paint": {
		    //     	"raster-opacity": 0.5,
		    //     	// "raster-contrast": 1,
		    //     	// "raster-saturation": 1,
		    //     	// "raster-brightness-min": 0.5,
		    //     	// "raster-brightness-max": 0.5

			   //      // "property": "cloudCover",
			   //      // "type": "interval",
		    //     	// "fill-color": {
		    //     	// 	"stops": [
		    //     	// 	]
		    //     	// }
		    //     }
		    // });
		

			map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');
			map.addControl(new mapboxgl.GeolocateControl(), 'bottom-right');


			var sunsetSpotsLayer = {
				id: 'sunsetSpots',
				type: 'symbol',
				source: "sunsetSpots",
			};
			var sunsetSpotsSource = {
		       type: "FeatureCollection",
		       features: []
			}

			function addSpot(lngLat) {
				let spot = {
			      "type": "Feature",
			      "properties": {
			      	"name": "Null Island"
			      },
			      "geometry": {
			          "type": "Point",
			          "coordinates": lngLat
			      }
			  	};

			  	sunsetSpotsSource.features.push(spot);

			  	map.getSource('sunsetSpots').setData(sunsetSpotsSource);

			  	var el = document.createElement('div');
			    el.className = 'sunset-spot';
			    el.style.backgroundImage = 'url(/assets/Sunset/v3.svg)';
			    el.style.backgroundSize = 'cover';
			    var heightWidth = 32;
			    el.style.height = heightWidth+'px';
			    el.style.width = heightWidth+'px';

			    el.addEventListener('click', function(e) {
					map.flyTo({center: lngLat});
			    });

		        let marker = new mapboxgl.Marker(el, {offset: [-heightWidth / 2, -heightWidth / 2]}).setLngLat(lngLat);
			    marker.addTo(map);
			}



			map.addSource('sunsetSpots', {
				type: 'geojson',
				data: sunsetSpotsSource
			});
			map.addLayer(sunsetSpotsLayer)

			var testingSpots = API.getSpots();
			testingSpots.map(addSpot);

			// console.log(JSON.stringify(map.getBounds(), null, 1))

			map.on('click', function (e) {
				// console.log(e.lngLat)
			    // addSpot(e.lngLat)
		    });

		});


	}

	setupMapboxMaps()

});


function initMap() {}

// https://github.com/mapnik/mapnik/wiki/RasterColorizer
// https://bl.ocks.org/lbud/ee919cb9cf265c635e2adc899b65dbbb
// https://medium.com/@Scarysize/data-driven-raster-layer-with-mapbox-gl-bdb3b747ae22
// NEED TO USE THIS


// lookup table of RGBAx10 to Pixel

// https://openlayers.org/en/latest/examples/raster.html
// For clouds
// {
    
// }
</script>





{{outlet}}
`